@page "/ingredient"
@using BlazorApp_Healthy.Shared
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h3>Ingredient</h3>
<a href="/ingredients/create" class="btn btn-primary float-end">Додати категорію</a>

@if (Ingredients != null)
{
    <table class="table table-bordered mt-3">
        <thead>
            <tr>
                <th>Title</th>
                <th>Quantity</th>
                <th>Unit</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ingredient in Ingredients)
            {
                <tr>
                    <td>@ingredient.Title</td>
                    <td>@ingredient.Quantity</td>
                    <td>@ingredient.Unit</td>
                    <td>
                        
                        <a href="/ingredients/edit/@ingredient.Id" class="btn btn-outline-primary">Редагувати</a>

                        <button type="button" class="btn btn-outline-primary" @onclick="(() => DeleteIngredient(ingredient.Id, ingredient.Title))">Видалити</button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Loading...</p>
}

@code {
    private List<BlazorApp_Healthy.Shared.Ingredient> Ingredients;

    protected override async Task OnInitializedAsync()
    {
        await LoadIngredients();
    }

    private async Task LoadIngredients()
    {
        Ingredients = await HttpClient.GetFromJsonAsync<List<BlazorApp_Healthy.Shared.Ingredient>>("ingredient");
    }

    private async Task DeleteIngredient(Guid id, string title)
    {
        var confirmDelete = await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete {title}?");

        if (confirmDelete)
        {
            var response = await HttpClient.DeleteAsync($"ingredient/{id}");
            if (response.IsSuccessStatusCode)
            {
                await LoadIngredients();
            }
            else
            {
                // Handle error
            }
        }
    }
}


