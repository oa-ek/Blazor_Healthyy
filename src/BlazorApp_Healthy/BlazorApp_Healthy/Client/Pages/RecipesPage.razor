@page "/recipes"
@using BlazorApp_Healthy.Client.Services.Recipes
@using BlazorApp_Healthy.Shared
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<h3>Recipes</h3>
<a href="/recipes/add" class="btn btn-primary float-end">Add a Recipe</a>
<div class="row">
    @if (Recipes != null)
    {
        @foreach (var recipe in Recipes)
        {
            <div class="col-md-4 mb-4">
                <div class="card">
                    <img class="card-img-top" src="@recipe.ImagePath" alt="@recipe.Name">
                    <div class="card-body">
                        <h5 class="card-title">@recipe.Name</h5>
                        <p class="card-text">@recipe.Description</p>
                        <div class="btn-group" role="group">
                            <a href="/recipes/details/@recipe.Id" class="btn btn-outline-primary">Details</a>
                            <a href="/recipes/edit/@recipe.Id" class="btn btn-outline-primary">Edit</a>
                            <button @onclick="() => DeleteRecipe(recipe.Id)" class="btn btn-outline-primary">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    private List<Recipe> Recipes;

    protected override async Task OnInitializedAsync()
    {
        Recipes = await HttpClient.GetFromJsonAsync<List<BlazorApp_Healthy.Shared.Recipe>>("Recipe");
    }
    private async Task DeleteRecipe(Guid id)
    {
        var confirmDelete = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this recipe?");
        if (confirmDelete)
        {
            var response = await HttpClient.DeleteAsync($"recipe/{id}");
            if (response.IsSuccessStatusCode)
            {
                // Refresh the recipe list after deletion
                await LoadRecipes();
            }
            else
            {
                // Handle error
            }
        }
    }
    private async Task LoadRecipes()
    {
        Recipes = await HttpClient.GetFromJsonAsync<List<Recipe>>("Recipe");
    }
}
