@using BlazorApp_Healthy.Client.Services.Comon
@using BlazorApp_Healthy.Shared

@page "/categories"
@inject IRepository<Category, Guid> CategoryRepository

<PageTitle>Categories</PageTitle>

<h2>Categories</h2>

<a class="btn btn-success" href="/categories/create">Add Category</a>

@if (categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.TitleCategory</td>   
                    <td>
                        <a href="/categories/edit/@category.Id" class="btn btn-warning">Edit</a>
                        <button @onclick="() => DeleteCategory(category.Id)" class="btn btn-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Category> categories;

    protected override async Task OnInitializedAsync()
    {
        categories = (await CategoryRepository.GetAllAsync()).ToList();
    }

    private async Task DeleteCategory(Guid id)
    {
        await CategoryRepository.DeleteAsync(id);
        categories = (await CategoryRepository.GetAllAsync()).ToList();
    }
}